import os
import yara
import tkinter as tk
from tkinter import filedialog

# Load the YARA rule
rules = yara.compile(source='''
rule embedded_executable {
 meta:
  description = "Detects embedded executable files"
  author = "Syam"
  date = "2023-12-10"
  version = "1.0"

 strings:
  $exe_signature = { 4D 5A } // PE file signature

 condition:
  $exe_signature at 0
}

rule base64_embedded_executable {
 meta:
  description = "Detects base64-encoded embedded executable files"
  author = "syam"
  date = "2023-11-08"
  version = "1.0"

 strings:
  $base64_exe = /([A-Za-z0-9+\/]+=*){50,}/

 condition:
  $base64_exe
}

rule embedded_archive {
 meta:
  description = "Detects embedded archive files"
  author = "syam charan"
  date = "2023-11-08"
  version = "1.0"

 strings:
  $zip_signature = { 50 4B 03 } 
  $tar_signature = { 75 73 74 61 00 30 }

 condition:
  $zip_signature at 0 or $tar_signature at 0
}

rule malicious_apk_2 {
 meta:
  description = "Detects APK files that are bound to malicious payloads"
  author = "S"
  date = "2023-11-08"
  version = "1.0"
 strings:
  $s1 = "Ljava/lang/Runtime;" wide
  $s2 = "Ljava/lang/ProcessBuilder;" wide
 condition:
  ($s1 or $s2)
}

''')

def is_malware_yara(file_path):
    yara_matches = rules.match(filepath=file_path)
    return bool(yara_matches)

def analyze_file():
    file_path = filedialog.askopenfilename(title="Select file to analyze", filetypes=[("All Files", "*.*")], initialdir="/home/kali")
    if file_path:
        is_malware_flag = is_malware_yara(file_path)
        if is_malware_flag:
            result_label.config(text="Danger! It is a malware.", fg="red")
        else:
            result_label.config(text="It is not a malware.", fg="green")

# Create Tkinter root window
root = tk.Tk()
root.title("Malware Analysis")
root.geometry("700x600")  # Set window size

# Styling
root.configure(bg="#f0f0f0")
font_bold = ("Helvetica", 20, "bold")

# Create and place widgets
frame = tk.Frame(root, bg="#f0f0f0")
frame.pack(expand=True, fill=tk.BOTH)

title_label = tk.Label(frame, text="Malware Detection", bg="#f0f0f0", font=("Helvetica", 32, "bold"))
title_label.grid(row=0, column=0, columnspan=2, pady=(100, 20))

button = tk.Button(frame, text="Select File", command=analyze_file, font=font_bold, bg="#4CAF50", fg="white")
button.grid(row=1, column=0, pady=(100, 200))

result_label = tk.Label(frame, text="", font=font_bold, bg="#f0f0f0")
result_label.grid(row=2, column=0, columnspan=2, pady=10)

# Center the widgets horizontally
frame.grid_columnconfigure(0, weight=1)

# Center the window on the screen
root.eval('tk::PlaceWindow %s center' % root.winfo_toplevel())

# Run the Tkinter event loop
root.mainloop()
